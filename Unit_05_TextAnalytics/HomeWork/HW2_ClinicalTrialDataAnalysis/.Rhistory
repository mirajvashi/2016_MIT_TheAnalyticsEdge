ctrial <- read.csv("clinical_trial.csv", stringsAsFactors = FALSE)
str(ctrial)
colnames(ctrial)
summary(ctrial)
max(nchar(ctrial$abstract))
summary(nchar(ctrial))
summary(nchar(ctrial$abstract))
table(nchar(ctrial$abstract) == 0)
sum(nchar(ctrial$abstract) == 0)
ctrial$title[which.min(nchar(ctrial$title))]
ctrial$title[1:10]
ctrial$abstract[1:10]
ctrial$abstract[1]
ctrial$abstract[2]
ctrial$abstract[3]
corpusTitle = ctrial
corpusAbstract = ctrial
library(tm)
library(rpart.plot)
library(rpart)
library(rpart.plot)
corpusTitle = tm_map(corpusTitle, tolower)
rm(corpusTitle)
rm(corpusAbstract)
corpusTitle = Corpus(VectorSource(ctrial$title))
corpusAbstract = Corpus(VectorSource(ctrial$abstract))
corpusTitle = tm_map(corpusTitle, tolower)
corpusAbstract = tm_map(corpusAbstract, tolower)
corpusTitle
corpusAbstract
corpusTitle = tm_map(corpusTitle, PlainTextDocument)
corpusAbstract = tm_map(corpusAbstract, PlainTextDocument)
corpusTitle = tm_map(corpusTitle, removePunctuation)
corpusAbstract = tm_map(corpusAbstract, removePunctuation)
corpusTitle = tm_map(corpusTitle, removeWords, stopwords("english"))
corpusAbstract = tm_map(corpusAbstract, removeWords, stopwords("english"))
corpusTitle = tm_map(corpusTitle, stemDocument)
corpusAbstract = tm_map(corpusAbstract, stemDocument)
dtmTitle = DocumentTermMatrix(corpusTitle)
dtmAbstract = DocumentTermMatrix(corpusAbstract)
dtmTitle = removeSparseTerms(dtmTitle, 0.95)
dtmAbstract = removeSparseTerms(dtmAbstract, 0.95)
dtmTitle
dtmAbstract
dfTitle = as.data.frame(as.matrix(dtmTitle))
dfAbstract = as.data.frame(as.matrix(dtmAbstract))
ncol(dfTitle)
ncol(dfAbstract)
summary(ctrila)
summary(ctrial
)
colnames(dfTitle)[1]
dfAbstract[1,]
dfAbstract[1,]
colSums(dfTitle)
which.max(colSums(dfTitle))
colnames(which.max(colSums(dfTitle)))
which.max(colSums(dfAbstract))
colnames(dtmTitle) = paste0("T", colnames(dtmTitle))
colnames(dfTitle) = paste0("T", colnames(dfTitle))
colnames(dfAbstract) = paste0("A", colnames(dfAbstract))
colnames(dfTitle)
colnames(paste("T", colnames(dfTitle)))
a <- colnames(paste("T", colnames(dfTitle)))
a
rm(a)
colnames(dfTitle)
colnames(dfAbstract)
dtm = cbind(dfTitle, dfAbstract)
colnames(dtm)
temp <- cbind(dtmTitle, dtmAbstract)
rm(temp)
temp <- cbind(dfTitle, dfAbstract)
str(ctrial)
rm(temp)
dtm$trial = ctrial$trial
dtm1 <- cbind(dfTitle, dfAbstract, row.names = NULL)
dtm1$trial = ctrial$trial
#############################################################################
library(caTools)
set.seed(144)
splt = sample.split(dtm$trial, SplitRatio = 0.70)
Train1 = subset(dtm, splt == TRUE)
Test1 = subset(dtm, splt == FALSE)
rm(dtm1)
table(Train1)
table(Train1$trial)
730/nrow(Train1)
library(rpart)
library(rpart.plot)
Model1 <- rpart(trial~., data = Train1, method = "class")
prp(Model1)
View(dtm)
summary(dtm[ , 1:3])
summary(dtm[ , 1:10])
max(predict(Model1)[ ,2])
max(predict(Model1, type = "response")[ ,2])
max(predict(Model1)[ ,2])
table(Train1$trial, (predict(Model1)[ ,2]) > 0.5)
(631+441)/nrow(Train1)
(441+131)/nrow(Train1)
(631+99)/norw(Train1)
(631+99)/nrow(Train1)
TP = 441/(441+131)
TN = 631/(631+99)
TP
TN
predM1 <- predict(Model1, newdata = Test1)
table(Test1$trial, predM1)
table(Test1$trial, predM1[ ,2]>0.5)
(261+162)/nrow(Test1)
library(ROCR)
predR1 <- prediction(predM1[ ,2], Test1$trial)
auc1 <- performance(predR1, "auc")
auc1
as.numeric(auc1@y.values)
