wiki <- read.csv("wiki.csv", stringsAsFactors = FALSE)
str(wiki)
head(wiki)
summary(wiki)
wiki$Removed[1]
wiki$Removed[2]
wiki$Removed[3]
wiki$Removed[1:3]
wiki$Removed[1:5]
wiki$Added[1:5]
wiki$Vandal = as.factor(wiki$Vandal)
summary(wiki)
library(tm)
corpus = Corpus(VectorSource(wiki$Added))
corpusAdded = Corpus(VectorSource(wiki$Added))
rm(corpus)
corpusAdded
corpusAdded = tm_map(corpusAdded, removeWords, stopwords("english"))
corpusAdded = tm_map(corpusAdded, stemDocument)
dtmAdded = DocumentTermMatrix(corpusAdded)
length(stopwords("english"))
dtmAdded
sparseAdded = removeSparseTerms(dtmAdded, 0.997)
sparseAdded
wordsAdded = as.data.frame(as.matrix(sparseAdded))
colnames(wordsAdded) = paste("A", colnames(wordsAdded))
View(wordsAdded)
corpusRemoved = Corpus(VectorSource(wiki$Removed))
corpusRemoved = tm_map(corpusRemoved, removeWords, stopwords("english"))
corpusRemoved = tm_map(corpusRemoved, stemDocument)
dtmRemoved = DocumentTermMatrix(corpusRemoved)
dtmRemoved
sparseRemoved = removeSparseTerms(dtmRemoved, 0.997)
wordsRemoved = as.data.frame(as.matrix(sparseRemoved))
colnames(wordsRemoved) = paste("R", colnames(wordsRemoved))
wikiWords = cbind(wordsAdded, wordsRemoved)
wikiWords$Vandal = wiki$Vandal
library(caTools)
splt = sample.split(wikiWords$Vandal, SplitRatio = 0.70)
wikiTrain = subset(wikiWords, splt == TRUE)
wikiTest = subset(wikiWords, splt == FALSE)
table(wikiTest$Vandal)
618/nrow(wikiTest)
set.seed(123)
splt = sample.split(wikiWords$Vandal, SplitRatio = 0.70)
wikiTrain = subset(wikiWords, splt == TRUE)
wikiTest = subset(wikiWords, splt == FALSE)
table(wikiTest$Vandal)
View(wikiTrain)
library(rpart)
library(rpart.plot)
library(randomForest)
Model1 <- rpart(Vandal ~., data = wikiTrain, method = "class")
predM1 <- predict(Model1, newdata = wikiTest, type = "class")
table(wikiTest$Vandal, predM1 > 0.5)
table(wikiTest$Vandal, predM1)
(618+12)/nrow(wikiTest)
prp(Model1)
family()
ls()
wikiWords
str(wikiWords)
wikiWords2 = wikiWords
wikiWords2$HTTP = ifelse(grepl("http", wikiWords$Added, fixed=TRUE), 1, 0)
wikiWords2$HTTP = ifelse(grepl("http",wiki$Added,fixed=TRUE), 1, 0)
table(wikiWords2$HTTP)
Train2 <- subset(wikiWords2, splt == TRUE)
Test2 <- subset(wikiWords2, splt == FALSE)
Model2 <- rpart(Vandal ~., data = Train2, method = "class")
prp(Model2)
predM2 <- predict(Model2, newdata = Test2, type = "class")
table(Test2$HTTP, predM2)
(1097+54)/nrow(Test2)
View(wikiWords2)
str(wikiWords2)
colnames(wikiWords2)
wikiWords2$HTTP[1:10]
wikiWords2$HTTP[1:100]
str(wikiWords2$HTTP)
Train2 <- subset(wikiWords2, splt == TRUE)
Test2 <- subset(wikiWords2, splt == FALSE)
Model2 <- rpart(Vandal ~., data = Train2, method = "class")
predM2 <- predict(Model2, newdata = Test2, type = "class")
table(Test2$HTTP, predM2)
set.seed(123)
splt1 <- sample.split(wikiWords2$Vandal, SplitRatio = 0.70)
library(caTools)
splt1 <- sample.split(wikiWords2$Vandal, SplitRatio = 0.70)
Train2.1 <- subset(wikiWords2, splt1 == TRUE)
Test2.1 < -subset(wikiWords2, splt1 == FALSe)
Test2.1 <- subset(wikiWords2, splt1 == FALSE)
Model2.1 <- rpart(Vandal~., data = Train2.1, method = "class")
predM2.1 <- predict(Model2.1, newdata = Test2.1, type = "class")
table(Test2.1$Vandal, predM2.1)
(609+57)/nrow(Test2.1)
wikiWords2$NumWordsAdded = rowSums(as.matrix(dtmAdded))
library(tm)
wikiWords2$NumWordsAdded = rowSums(as.matrix(dtmAdded))
wikiWords2$NumWordsRemoved = rowSums(as.matrix(dtmRemoved))
mean(wikiWords2$NumWordsAdded)
Train3 <- subset(wikiWords2, splt1 == TRUE)
Test3 <- subset(wikiWords2, splt1 == FALSE)
Model3 <- rpart(Vandal~., data = Train3, method = "class")
predM3 <- predict(Model3, newdata = Test3, type = "class")
table(Test3$Vandal, predM3)
(514+248)/nrow(Test3)
# Using Non Textual Data
###################################################################
wikiWords3 = wikiWords2
colnames(wiki)
wikiWords3$Minor = wiki$Minor
wikiWords3$Loggedin = wiki$Loggedin
Train4 <- subset(wikiWords3, splt1 == TRUE)
Test4 <= subset(wikiWords3, splt1 == FALSE)
Test4 <- subset(wikiWords3, splt1 == FALSE)
Model4 <- rpart(Vandal~., data = Train4, method = "class")
predM4 <- predict(Model4, newdata = Test4, type = "class")
table(Test4$Vandal, predM4)
(595+241)/nrow(Test4)
prp(Model4)
library(randomForest)
###################################################################
Model5 = randomForest(Vandal~., data = Train4)
Model5 = randomForest(Vandal~., data = Train4)
Model5 = randomForest(Vandal~., data = Train3)
