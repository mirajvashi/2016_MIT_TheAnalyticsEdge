dfHousehold <- read.csv("Household.csv")
dfHousehold <- read.csv("Household.csv")
dfHousehold <- read.csv("Households.csv")
View(dfHousehold)
table(dfHousehold$AfternoonPct = 0)
table(dfHousehold$AfternoonPct == 0)
table(dfHousehold$MorningPct == 0)
table(dfHousehold$MorningPct == 100)
table(dfHousehold$AfternoonPct == 100)
min((subset(dfHousehold, AvgSalesValue > 150))$AvgDiscount)
min((subset(dfHousehold, AvgDiscount > 25))$AvgSalesValue)
table(dfHousehold$NumVisits >= 300)
148/nrow(dfHousehold)
summary(dfHousehold)
library(caret)
preProc = preProcess(dfHousehold)
class(preProc)
mode(preProc)
attributes(preProc)
dfNormHouseHolds <- predict(preProc, dfHousehold)
summary(dfNormHouseHolds)
apply(dfNormHouseHolds, 2, sd)
tpply(dfNormHouseHolds, sd)
?tapply
tpply(dfNormHouseHolds[ ,1:ncol(dfNormHouseHolds)], sd)
tapply(dfNormHouseHolds[ ,1:ncol(dfNormHouseHolds)], sd)
summary(dfNormHouseHolds)
set.seed(200)
distances <- dist(dfNormHouseHolds, method = "euclidean")
clustRetailShoppers <- hclust(distances, method = "ward.D")
plot(clustRetailShoppers)
plot(clustRetailShoppers, labels = F)
rect.hclust(clustRetailShoppers, k=2)
rect.hclust(clustRetailShoppers, k=3)
rect.hclust(clustRetailShoppers, k=4)
rect.hclust(clustRetailShoppers, k=5)
rect.hclust(clustRetailShoppers, k=6)
kCluster = kmeans(dfNormHouseHolds, centers = 10)
kClusyer
kCluster
kCluster$cluster
kCluster$centers
kCluster$totss
kCluster$tot.withinss
kCluster$size
set.seed(200)
kCluster = kmeans(dfNormHouseHolds, centers = 10)
kCluster$size
range(kCluster$size)
range(table(kCluster$cluster))
table(kCluster$cluster)
kCluster$ifault
kCluster$iter
tapply(dfNormHouseHolds$MorningPct, kCluster$cluster, mean)
kCluster$centers
class(kCluster$centers)
View(kCluster$centers)
clustRetailShoppers$merge
clustRetailShoppers$height
clustRetailShoppers$order
clustRetailShoppers$method
clustRetailShoppers$call
set.seed(5000)
kClust1 = kmeans(dfNormHouseHolds, centers = 5)
range(kClust1$size)
View(kClust1$centers)
kClust1$withinss
kmeans1 = kmeans(dfNormHouseHolds, centers = 1)
kmeans2 = kmeans(dfNormHouseHolds, centers = 2)
kmeans3 = kmeans(dfNormHouseHolds, centers = 3)
kmeans4 = kmeans(dfNormHouseHolds, centers = 4)
kmeans5 = kmeans(dfNormHouseHolds, centers = 5)
kmeans6 = kmeans(dfNormHouseHolds, centers = 6)
kmeans7 = kmeans(dfNormHouseHolds, centers = 7)
kmeans8 = kmeans(dfNormHouseHolds, centers = 8)
kmeans9 = kmeans(dfNormHouseHolds, centers = 9)
kmeans10 = kmeans(dfNormHouseHolds, centers = 10)
vKValue <- 1:10
sum(kmeans1$withinss) - kmeans1$tot.withinss
vSumWithiness = c(kmeans1$tot.withinss, kmeans2$tot.withinss, kmeans3$tot.withinss, kmeans4$tot.withinss, kmeans5$tot.withinss, kmeans6$tot.withinss, kmeans7$tot.withinss, kmeans8$tot.withinss, kmeans9$tot.withinss, kmeans10$tot.withinss)
plot(vKValue, vSumWithiness)
library(ggplot2)
?plot
plot(vKValue, vSumWithiness, type = "l")
plot(vKValue, vSumWithiness, type = "b")
