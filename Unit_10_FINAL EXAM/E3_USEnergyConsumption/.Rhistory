setwd("~/AnalyticsEdge/Unit 10_FINAL EXAM/E3_USEnergyConsumption")
dfEnergy <- read.csv("https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/energy.csv")
dfEnergy <- read.csv("https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/energy.csv")
dfEnergy <- read.csv("energy.csv")
View(dfEnergy)
699/51
dfEnergy <- read.csv("https://d37djvu3ytnwxt.cloudfront.net/assets/courseware/2dd4f6df07192ae4742e39a06d56b51b/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/energy.csv")
View(dfEnergy)
tapply(dfEnergy$GenTotalRenewable, dfEnergy$STATE, sum)
sort(tapply(dfEnergy$GenTotalRenewable, dfEnergy$STATE, sum), decreasing = TRUE)
dfTemp = subset(dfEnergy, STATE == "ID")
dfTemp$YEAR[which.max(dfTemp$GenTotalRenewable)]
str(dfEnergy)
summary(dfEnergy)
dfEnergy$presidential.results
table(dfEnergy$YEAR, dfEnergy$presidential.results)
table(dfEnergy$STATE, dfEnergy$presidential.results)
class(table(dfEnergy$STATE, dfEnergy$presidential.results))
M1 <- as.data.frame(table(dfEnergy$STATE, dfEnergy$presidential.results))
View(M1)
M1 <- as.matrix(table(dfEnergy$STATE, dfEnergy$presidential.results))
View(M1)
M1 <- table(dfEnergy$STATE, dfEnergy$presidential.results))
M1 <- table(dfEnergy$STATE, dfEnergy$presidential.results)
M1
View(M1)
class(M1)
mode(M1)
str(M1)
taply(dfEnergy$presidential.results, dfEnergy$STATE, sum)
tapply(dfEnergy$presidential.results, dfEnergy$STATE, sum)
class(tapply(dfEnergy$presidential.results, dfEnergy$STATE, sum))
mode(tapply(dfEnergy$presidential.results, dfEnergy$STATE, sum))
V <- tapply(dfEnergy$presidential.results, dfEnergy$STATE, sum)
v
V
V[1]
names(V)
df1 <- data.frame("State" = names(V), "Democrate" = V)
View(df1)
colnames(df1) = c("STATE", "PartyCount")
dfTemp = dfEnergy
dfTemp2 = merge.data.frame(dfTemp, df1)
View(dfTemp2)
mean((subset(dfTemp2, PartyCount == 0))$AllSourcesCO2, na.rm = TRUE)
mean((subset(dfTemp2, PartyCount == 14))$AllSourcesCO2, na.rm = TRUE)
mean((subset(dfTemp2, PartyCount == 14))$AllSourcesNOx, na.rm = TRUE)
mean((subset(dfTemp2, PartyCount == 0))$AllSourcesNOx, na.rm = TRUE)
cor(dfEnergy$AllSourcesCO2, dfEnergy$EsalesIndustrial, use = "complete")
cor(dfEnergy$AllSourcesSO2, dfEnergy$EsalesIndustrial, use = "complete")
cor(dfEnergy$AllSourcesNOx, dfEnergy$EsalesResidential, use = "complete")
cor(dfEnergy$AllSourcesCO2, dfEnergy$EsalesCommercial, use = "complete")
boxplot(dfEnergy$STATE, dfEnergy$EPriceTotal)
?boxplot
boxplot(dfEnergy$STATE ~ dfEnergy$EPriceTotal)
boxplot(dfEnergy$EPriceTotal ~ dfEnergy$STATE)
tapply(dfEnergy$EPriceTotal, dfEnergy$STATE, mean)
sort(tapply(dfEnergy$EPriceTotal, dfEnergy$STATE, mean))
sort(tapply(dfEnergy$GenTotal, dfEnergy$STATE, mean))
set.seed(144)
spl = sample(1:nrow(dfEnergy), size = 0.7*nrow(dfEnergy))
dfTrain = dfEb
dfTrain = dfEnergy[spl, ]
dfTest = dfEnergy[-spl, ]
glmModel1 = glm(GenSolarBinary ~ GenHydro + GenSolar + CumlFinancial + CumlRegulatory + Total.salary + Import, data = dfTrain)
glmModel1 = glm(GenSolarBinary ~ GenHydro + GenSolar + CumlFinancial + CumlRegulatory + Total.salary + Import, data = dfTrain, family = "binomial")
summary(glmModel1)
predM1 <- predict(glmModel1, newdata = dfTest, type = "response")
predM1
table(dfTest$GenSolarBinary, predM1 > 0.5)
(154+18)/nrow(dfTest)
dfTemp = dfTest
dfTemp$Predicted = predM1
dfSub1 = subset(dfTemp, dfTemp$presidential.results == 0)
dfSub2 = subset(dfTemp, dfTemp$presidential.results == 1)
table(dfTemp$GenSolarBinary, dfTemp$Predicted)
table(dfTemp$GenSolarBinary, dfTemp$Predicted>0.5)
table(dfSub1$GenSolarBinary, dfSub1$Predicted>0.5)
(92)/(90+20)
table(dfSub2$GenSolarBinary, dfSub2$Predicted>0.5)
(80)/(80+20)
rm(dfSub1)
rm(dfSub2)
rm(dfTemp)
rm(dfTemp2)
View(df1)
rm(M1)
rm(V)
dfTrain.Limited = dfTrain[ ,c("CumlRegulatory", "CumlFinancial", "presidential.results", "Total.salary", "Import")]
dfTest.Limited = dfTest[ ,c("CumlRegulatory", "CumlFinancial", "presidential.results", "Total.salary", "Import")]
view(dfTrain.Limited)
View(dfTrain.Limited)
library(caret)
library(flexclust)
library(caTools)
prepTrain = preProcess(dfTrain.Limited)
prepTest = preProcess(dfTest.Limited)
dfTrain.Norm = predict(prepTrain, dfTrain.Limited)
dfTest.Norm = predict(prepTest, dfTest.Limited)
summary(dfTrain.Norm)
summary(dfTest.Norm)
set.seed(144)
k2Clust = kmeans(dfTrain.Norm, centers = 2, iter.max = 1000)
k2Clust$cluster
?flexclust
methods()
methods(flexclust)
obKCCA = as.kcca(k2Clust, dfTrain.Norm)
summary(obKCCA)
dfTemp = predict(obKCCA, dfTrain)
dfTemp = predict(obKCCA, dfTrain.Norm)
rm(dfTemp)
k2Clust
k2Clust$cluster
dfTemp = dfTrain
dfTemp$ClusterId = k2Clust$cluster
View(dfTemp)
table(dfTemp$presidential.results, dfTemp$ClusterId)
tapply(dfTemp$presidential.results, dfTemp$ClusterId, mean)
1-tapply(dfTemp$presidential.results, dfTemp$ClusterId, mean)
1-tapply(dfTemp$presidential.results, dfTemp$CumlFinancial, mean)
1-tapply(dfTemp$CumlFinancial, dfTemp$ClusterId, mean)
1-tapply(dfTemp$CumlRegulatory, dfTemp$ClusterId, mean)
tapply(dfTemp$CumlRegulatory, dfTemp$ClusterId, mean)
tapply(dfTemp$CumlFinancial, dfTemp$ClusterId, mean)
tapply(dfTemp$AllSourcesCO2, dfTemp$ClusterId, mean)
tapply(dfTemp$AllSourcesCO2, dfTemp$ClusterId, mean, na.rm = T)
tapply(dfTemp$AllSourcesSO2, dfTemp$ClusterId, mean, na.rm = T)
tapply(dfTemp$AllSourcesNOx, dfTemp$ClusterId, mean, na.rm = T)
T <- predict(obKCCA)
T
class(T)
T - k2Clust$cluster
sum(T - k2Clust$cluster)
dfTrain1 <- dfTrain[T == 1, ]
dfTrain1 <- dfTrain[T == 2, ]
dfTrain1 <- dfTrain[T == 1, ]
dfTrain2 <- dfTrain[T == 2, ]
table(dfTemp$ClusterId)
glmM1 <- glm(GenSolarBinary ~ GenHydro + GenSolar + CumlFinancial + CumlRegulatory + Total.salary + Import, data = dfTrain1, family = "binomial")
summary(glmM1)
TST <- predict(obKCCA, newdata = dfTest.Norm)
TST
table(TST)
dfTest1 <- dfTest[TST==1, ]
dfTest2 <- dfTest[TST==2, ]
predglmM1 <- predict(glmM1, newdata = dfTest1, type = "response")
table(dfTest1$GenSolarBinary, predglmM1 > 0.5)
predglmModel1 <- predict(glmModel1, newdata = dfTest1, type = "response")
table(dfTest1$GenSolarBinary, predglmModel1 > 0.5)
(118)/(118+12)
115/1.3
115/130
glmM1 <- glm(GenSolarBinary ~ GenHydro + GenSolar + CumlFinancial + CumlRegulatory + Total.salary + Import, data = dfTrain1, family = "binomial")
glmM2 <- glm(GenSolarBinary ~ GenHydro + GenSolar + CumlFinancial + CumlRegulatory + Total.salary + Import, data = dfTrain2, family = "binomial")
summary(glmM1)
summary(glmM2)
predglmM2 <- predict(glmM2, newdata = dfTest2, type = "response")
table(dfTest2$GenSolarBinary, predglmM2 > 0.5)
predglmModel2 <- predict(glmModel1, newdata = dfTest2, type = "response")
table(dfTest2$GenSolarBinary, predglmModel2 > 0.5)
(60)/80
(39+18)/80
AllAsisVal = c(dfTest1$GenSolarBinary, dfTest2$GenSolarBinary)
AllPredictions = c(predglmM1, predglmModel2)
table(AllAsisVal, AllPredictions > 0.5)
(153+22)/length(AllAsisVal)
table(AllPredictions > 0.5)
(153+22)/(153+27+30)
AllPredictions = c(predglmM1, predglmM2)
table(AllAsisVal, AllPredictions > 0.5)
(178)/210
View(dfTemp)
View(df1)
V <- tapply(dfEnergy$presidential.results, dfEnergy$STATE, sum)
View(V)
df1 <- data.frame("State" = names(V), "Democrate" = V)
View(df1)
dfMerged = merge(dfEnergy, df1, by.x = "STATE", by.y = "State")
write.csv(dfMerged, "Merged.csv", row.names = FALSE)
tapply(dfEnergy$AllSourcesCO2, dfEnergy$presidential.results, mean)
tapply(dfEnergy$AllSourcesCO2, dfEnergy$presidential.results, mean, na.rm = TRUE)
q()
