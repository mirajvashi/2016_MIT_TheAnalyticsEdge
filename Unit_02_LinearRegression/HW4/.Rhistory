setwd("~/")
Perf <- read.csv("JupiterPerfData.csv")
View(Perf)
hist(Perf$P90_R2_SS_1124)
plot(Perf[3,])
plot(Perf[3,])
plot(Perf$P90_R1_NSS_1124, Perf$P90_R2_SS_1124)
plot(Perf$AVG_R1_SS_1124, Perf$AVG_R2_SS_1124)
temp <- subset(Perf, CHECK == 'YES')
View(temp)
setwd("~/")
PD <- read.csv("JupiterPerfData.csv")
Viw(PD)
View(PD)
plot(PD$VAR1, PD$VAR2)
line(Perf[3,])
plot(Perf$P90_R1_SS_1124, Perf$P90_R2_SS_1124)
example(min)
X <- 1:100
Y <- cos(X)
barplot(Y)
X <- 1:20
Y <- cos(X)
barplot(Y)
X <- seq(1,10,0.1)
Y <- cos(X)
barplot(Y)
X <- seq(1,10,0.01)
Y <- cos(X)
barplot(Y)
X <- seq(1,10,0.05)
Y <- cos(X)
barplot(Y)
plot(x,y)
plot(X,Y)
plot(Y, X)
barplot(Y)
x <- 1:10
x
x[x>5]
sum(x[x>5])
sum(x[x!=5])
sum(x[x==5])
sum(x[x<5])
getwd()
source('~/DataCamp.R')
#star_wars_matrix <-
#star_wars_matrix <-
#star_wars_matrix <-
#star_wars_matrix <-
#star_wars_matrix <-
#star_wars_matrix <-
source('~/DataCamp.R')
source('~/DataCamp.R')
source('~/DataCamp.R')
? m"matrix-class"
?matrix
source('~/DataCamp.R')
source('~/DataCamp.R')
source('~/DataCamp.R')
citations()
citation()
licence()
license()
demo()
help()
?abline
wine <- read.scv("wine.csv")
??lm
?lm
load("~/AnalyticsEdge/Week 2/HW3/.RData")
setwd("~/AnalyticsEdge/Week 2/HW3")
View(fluTest)
summary(fluTest$PredILI)
library(zoo
)
version
install.packages(c("car", "curl", "digest", "httr", "jsonlite", "lme4", "lubridate", "memoise", "quantreg", "R6", "Rcpp", "RcppEigen", "RCurl", "stringi", "swirl", "testthat"))
library(zoo)
ILILag2 = lag(zoo(flu$ILI), -2, na.pad=TRUE)
ILILag2
flu$ILILag2 <- coredata(ILILag2)
sum(is.na(ILILag2))
length(ILILag2)
class(ILILag2)
typeof(ILILag2)
plot(ILILag2)
plot(ILILag2)
plot(ILILag2. col="red")
plot(ILILag2. col == "red")
plot(ILILag2, col = "red")
plot(ILILag2, col = "bluw")
plot(ILILag2, col = "blue")
plot(log(flu$ILILag2), log(flu$ILI))
FluTrend2 <- lm(log(ILI)~Queries+log(ILILag2), data = flu)
plot(flu$ILI-flu$ILILag2)
plot(c(1:nrow(flue), flu$ILI-flu$ILILag2)
)
plot(c(1:nrow(flu), flu$ILI-flu$ILILag2))
plot(c(1:nrow(flu)), flu$ILI-flu$ILILag2)
summary(FluTrend2)
ILILag2.1 = lag(zoo(fluTest$ILI), -2, na.pad=TRUE)
fluTest$ILILag2 <- coredata(ILILag2.1)
sum(is.na(ILILag2.1))
fluTest$ILILag2 [1] = flu$ILILag2[norw(flue)-1]
fluTest$ILILag2 [1] = flu$ILILag2[nrow(flue)-1]
fluTest$ILILag2 [1] = flu$ILILag2[nrow(flu)-1]
fluTest$ILILag2 [2] = flu$ILILag2[nrow(flu)]
View(fluTest)
nrow(flu)
fluTest$ILILag2 [1] = flu$ILILag2[416]
fluTest$ILILag2 [2] = flu$ILILag2[417]
View(fluTest)
fluTest$ILILag2 [2] = flu$ILI[417]
fluTest$ILILag2 [1] = flu$ILI[416]
View(fluTest)
PredILI2 <- exp(predict(FluTrend2, newdata = fluTest))
length(PredILI2)
nrow(fluTest)
fluTest$PredILI2 <- PredILI2
View(fluTest)
RMSE = sqrt((sum((fluTest$ILI - fluTest$PredILI2)^2))/nrow(fluTest))
RMSE
RMSE2 = sqrt((sum((fluTest$ILI - fluTest$PredILI2)^2))/nrow(fluTest))
RMSE1 = sqrt((sum((fluTest$ILI - fluTest$PredILI)^2))/nrow(fluTest))
RMSE1
RMSe2
RMSE2
setwd("~/AnalyticsEdge/Week 2/HW4")
data(states)
data(state)
statedata = cbind(data.frame(state.x77), state.abb, state.area, state.center,  state.division, state.name, state.region)
states = cbind(data.frame(state.x77), state.abb, state.area, state.center,  state.division, state.name, state.region)
str(states)
plot(statedata$x, statedata$y)
tapply(states$HS.Grad, states$state.region, mean)
boxplot(states$Murder, states$state.region)
boxplot(states$Murder ~ states$state.region)
boxplot(states$Murder ~ states$state.region)
summary(states$Murder)
states$state.name[which(states$state.region = "Northeast" & states$Murder > 10)]
states$state.name[which(states$state.region == "Northeast" & states$Murder > 10)]
View(states)
names(states)
m1 <- lm(Life.Exp ~ Population+Income+Illiteracy+Murder+HS.Grade+Frost+Area, data = states)
m1 <- lm(Life.Exp ~ Population+Income+Illiteracy+Murder+HS.Grad+Frost+Area, data = states)
summary(m1)
plot(states$Income, states$Life.Exp)
m2 = step(m1)
summary(m2)
plot(m1)
plot(m2)
pred <- predict(m2)
states$state.name[which.min(pred)]
states$state.name[which.min(states$Life.Exp)]
states$state.name[which.max(states$Life.Exp)]
states$state.name[which.max(pred)]
states$state.name[which.min(m2$residuals)]
states$state.name[wwhich.max(m2$residuals)]
states$state.name[which.max(m2$residuals)]
sort(abs(m2$residuals))
states$state.name[which.min(abs(m2$residuals)]
states$state.name[which.min(abs(m2$residuals))]
states$state.name[which.max(abs(m2$residuals))]
m2$residuals
View(flu)
m1
summary(m1)
View(statedata)
plot(states$Life.Exp, states$Population)
plot(states$Life.Exp, states$Income)
plot(states$Life.Exp, states$Illiteracy
)
plot(states$Life.Exp, states$Murder)
abline(m1)
plot(states$Life.Exp, states$HS.Grad)
plot(states$Life.Exp, states$Frost
)
cor(states$Life.Exp, states$Frost)
cor(states$Life.Exp, states$Area)
plot(states$Life.Exp, states$Area)
setwd("~/AnalyticsEdge/Week 2/Temp/USCRIMES")
crimes <- read.csv("USCrimes.csv")
setwd("~/AnalyticsEdge/Week 3/Lectures")
getwd()
rm(list=ls())
cls
clear
quality <- read.csv("quality.csv")
View(quality)
install.packages("caTools")
library(caTools)
set.seed(88)
split = sample.split(quality$PoorCare, SplitRatio = 0.75)
