library(ggplot2)
library(ggmap)
library(maps)
statesMap = map_data("state")
View(statesMap)
class(statesMap)
typeof(statesMap)
str(statesMap)
summary(statesMap)
table(statesMap$group)
class(table(statesMap$group))
typeof(table(statesMap$group))
legth(table(statesMap$group))
length(table(statesMap$group))
P0 <- ggplot(statesMap, aes(x = long, y = lat, group = group))
P0 + geom_polygon(fill = "white", color = "back")
P0 + geom_polygon(fill = "white", color = "black")
P0 + geom_polygon(aes(fill = region), color = "black")
P0 + geom_polygon(aes(fill = group), color = "black")
P0
P1 <- P0 + geom_polygon(fill = "white", color = "black")
P1
P1
polling <- read.csv("PollingImputed.csv")
str(polling)
levels(as.factor(polling$Year))
Train = subset(polling, Year<2012)
Test = subset(polling, Year=2012)
mod2 = glm(Republican~SurveyUSA+DiffCount, data=Train, family="binomial")
TestPrediction = predict(mod2, newdata=Test, type="response")
TestPredictionBinary = as.numeric(TestPrediction > 0.5)
TestPrediction
TestPredictionBinary
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, polling$State)
table(predictionDataFrame$TestPredictionBinary)
mean(predictionDataFrame$TestPrediction)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, Test$State)
sum(TestPredictionBinary)
mod2 = glm(Republican~SurveyUSA+DiffCount, data=Train, family="binomial")
TestPrediction = predict(mod2, newdata=Test, type="response")
TestPredictionBinary = as.numeric(TestPrediction > 0.5)
sum(TestPredictionBinary)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, Test$State)
mean(TestPrediction)
table(Test$Republican, TestPredictionBinary)
mean(TestPredictionBinary)
table(Test$State, TestPredictionBinary)
View(Test)
Test = subset(polling, Year == 2012)
TestPrediction = predict(mod2, newdata=Test, type="response")
TestPredictionBinary = as.numeric(TestPrediction > 0.5)
table(TestPredictionBinary)
mean(TestPrediction)
predictionDataFrame$region = tolower(predictionDataFrame$Test.State)
str(predictionDataFrame)
prediction.map = merge(predictionDataFrame, statesMap, by="region")
predictionMap = prediction.map
predictionMap = predictionMap[order(predictionMap$order)]
predictionMap = predictionMap[order(predictionMap$order), ]
rm(prediction.map)
nrow(predictionMap)
nrow(statesMap)
predictionDataFrame$region = tolower(predictionDataFrame$Test.State)
predictionMap = merge(statesMap, predictionDataFrame, by = "region")
predictionMap = predictionMap[order(predictionMap$order),]
nrow(predictionMap)
nrow(predictionDataFrame)
nrow(statesMap)
str(predictionDataFrame)
str(statesMap)
table(statesMap)
table(statesMap$region)
table(predictionDataFrame$region)
View(predictionDataFrame)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, Test$State)
predictionDataFrame$region = tolower(predictionDataFrame$Test.State)
predictionMap = merge(statesMap, predictionDataFrame, by = "region")
predictionMap = predictionMap[order(predictionMap$order),]
?merge
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary)) + geom_polygon(color = "black")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction)) + geom_polygon(color = "black")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary)) + geom_polygon(color = "black")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary)) + scale_fill_gradient(low = "blue", high = "red")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", name = "2012 Prediction")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", name = "2012 Prediction", breaks = c(0,0.5,1))
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", name = "2012 Prediction", breaks = c(0,1))
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", name = "2012 Prediction", breaks = c(0,1), lables = c("DEM", "REP"))
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", name = "2012 Prediction", breaks = c(0,1), labels = c("DEM", "REP"))
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", name = "2012 Prediction", breaks = c(0,1), labels = c("DEM", "REP"))
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red")
predictionDataFrame$TestPrediction[predictionDataFrame$region == "florida"]
geom_polygon()
?geom_polygon
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black", linetype = 3) + scale_fill_gradient(low = "blue", high = "red")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black", linetype = 3, size = 3) + scale_fill_gradient(low = "blue", high = "red")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black", size = 3) + scale_fill_gradient(low = "blue", high = "red")
