stocks <- read.csv("StockCluster.csv")
stocks <- read.csv("StocksCluster.csv")
str(stocks)
head(stocks)
table(stocks$PositiveDec)
6324/(6324+5256)
cor(stocks[ ,1:ncol(stocks)-1])
cor(stocks[ ,1:ncol(stocks)-1])
colMeans(stocks)
max(colMeans(stocks))
set.seed(144)
library(caTools)
splt = sample.split(stocks$PositiveDec, SplitRatio = 0.70)
stockTrain = subset(stocks, splt == TRUE)
stockTest = subset(stocks, splt == FALSE)
stockModel <- glm(PositiveDec ~ ., data = stockTrain, family = "binomial")
predTrain = predict(stockMdoel)
predTrain = predict(stockModel, type = "response")
table(stockTrain$PositiveDec, predTrain)
table(stockTrain$PositiveDec, predTrain >0.5)
(990+3640)/nrow(stockTrain)
table(stockTest$PositiveDec, (predict(stockModel, newdata = stockTest) > 0.5))
(1427+312)/norw(stockTest)
(1427+312)/nrow(stockTest)
table(stockTest$PositiveDec, (predict(stockModel, newdata = stockTest, type = "response") > 0.5))
(417+1553)/nrow(stockTest)
table(stockTest$PositiveDec)
1897/nrow(stockTest)
limitedTrain = stockTrain
limitedTest = stockTest
limitedTrain$PositiveDec = NULL
limitedTest$PositiveDec = NULL
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
colMeans(normTrain)
set.seed(144)
km = kmeans(normTrain, centers = 3)
km$size
library(flexclust)
km.kcca = as.kcca(km, normTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata=normTest)
str(clusterTest)
table(clusterTest)
str(km)
stockTrain1 = subset(stockTrain, clusterTrain == 1)
stockTrain2 = subset(stockTrain, clusterTrain == 2)
stockTrain3 = subset(stockTrain, clusterTrain == 3)
stockTest1 = subset(stockTest, clusterTest == 1)
stockTest1 = subset(stockTest, clusterTest == 2)
stockTest1 = subset(stockTest, clusterTest == 1)
stockTest2 = subset(stockTest, clusterTest == 2)
stockTest3 = subset(stockTest, clusterTest == 3)
colMeans(stockTest1)
round(colMeans(stockTest1),4)
round(colMeans(stockTest1),4)
round(colMeans(stockTest2),4)
round(colMeans(stockTest3),4)
max(round(colMeans(stockTest3),4))
max(round(colMeans(stockTest2),4))
max(round(colMeans(stockTest1),4))
max(round(colMeans(stockTest1[ ,1:ncol(stockTest1)-1]),4))
max(round(colMeans(stockTest1[ ,1:ncol(stockTest2)-1]),4))
max(round(colMeans(stockTest2[ ,1:ncol(stockTest2)-1]),4))
max(round(colMeans(stockTest3[ ,1:ncol(stockTest2)-1]),4))
StockModel1 = glm(PositiveDec ~ ., data = stockTrain1, family = "binomial")
StockModel2 = glm(PositiveDec ~ ., data = stockTrain2, family = "binomial")
StockModel3 = glm(PositiveDec ~ ., data = stockTrain3, family = "binomial")
summary(StockModel1)
summary(StockModel2)
summary(StockModel3)
PredictTest1 = predict(StockModel1, newdata = stockTest1, type = "response")
PredictTest2 = predict(StockModel1, newdata = stockTest2, type = "response")
PredictTest3 = predict(StockModel1, newdata = stockTest3, type = "response")
table(stockTest1$PositiveDec, PredictTest1)
table(stockTest1$PositiveDec, PredictTest1>0.5)
(30+774)/nrow(stockTest1)
table(stockTest2$PositiveDec, PredictTest2>0.5)
(323+787)/nrow(stockTest2)
table(stockTest3$PositiveDec, PredictTest3>0.5)
(24+21)/nrow(stockTest3)
PredictTest2 = predict(StockModel2, newdata = stockTest2, type = "response")
PredictTest3 = predict(StockModel3, newdata = stockTest3, type = "response")
table(stockTest2$PositiveDec, PredictTest2>0.5)
(388+757)/nrow(stockTest2)
table(stockTest3$PositiveDec, PredictTest3>0.5)
(49+13)/nrow(stockTest3)
AllPredictions = c(PredictTest1, PredictTest2, PredictTest3)
AllOutcomes = c(stocksTest1$PositiveDec, stocksTest2$PositiveDec, stocksTest3$PositiveDec)
AllOutcomes = c(stockTest1$PositiveDec, stockTest2$PositiveDec, stockTest3$PositiveDec)
table(AllOutcomes, AllPredictions)
table(AllOutcomes, AllPredictions > 0.5)
(467+1544)/length(AllOutcomes)
